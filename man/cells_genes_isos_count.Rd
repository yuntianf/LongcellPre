% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/transcript_impute.R
\name{cells_genes_isos_count}
\alias{cells_genes_isos_count}
\title{cells_genes_isos_count}
\usage{
cells_genes_isos_count(
  data,
  gtf,
  thresh = 3,
  overlap_thresh = 0.25,
  filter_only_intron = TRUE,
  cell_col = "cell",
  gene_col = "gene",
  transcript_col = "isoform",
  count_col = "count",
  gtf_gene_col = "gene",
  gtf_iso_col = "transname",
  gtf_start_col = "start",
  gtf_end_col = "end",
  split = "|",
  sep = ","
)
}
\arguments{
\item{data}{The input dataframe, including the reads, reads count and its aligned annotated isoform.}

\item{gtf}{The gtf annotation, each row is an exon for an isoform}

\item{thresh}{The maximum threshold for the total offset of middle splicing sites.}

\item{overlap_thresh}{The minimum threshold for the coverage of the annotated isoform.}

\item{filter_only_intron}{A boolean to indicate if read only cover intron part should be preserved.}

\item{cell_col}{The name of the column in the input data which records the cell barcode.}

\item{gene_col}{The name of the column in the input data which records the gene name.}

\item{transcript_col}{The name of the column in the input data which records the isoform.}

\item{count_col}{The name of the column in the input data which records the reads count.}

\item{gtf_gene_col}{the name of the column which stores gene name in the gtf.}

\item{gtf_iso_col}{the name of the column which stores isoform name in the gtf.}

\item{gtf_start_col}{the name of the column which stores the start position of exon in the gtf.}

\item{gtf_end_col}{the name of the column which stores the end position of exon in the gtf.}

\item{split}{The character to split the exons in the isoform}

\item{sep}{The character to split the start and end position for each exon in the isoform.}
}
\description{
imputate the isoform count for multiple genes in multiple cells.
}
\details{
Some truncated reads can have ambigous alignment to multiple annotated isoforms, this function will
iterative imputate the isoform count based on non-ambigous alignment.
}
