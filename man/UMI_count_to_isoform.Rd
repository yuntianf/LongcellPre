% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pipeline.R
\name{UMI_count_to_isoform}
\alias{UMI_count_to_isoform}
\title{UMI_count_to_isoform}
\usage{
UMI_count_to_isoform(
  umi_count,
  dir,
  gene_bed,
  gtf = NULL,
  gene_col = "gene",
  bed_gene_col = "gene",
  bed_strand_col = "strand",
  filter_only_intron = TRUE,
  mid_offset_thresh = 3,
  overlap_thresh = 0,
  gtf_gene_col = "gene",
  gtf_start_col = "start",
  gtf_end_col = "end",
  gtf_iso_col = "transname",
  cores = 1
)
}
\arguments{
\item{umi_count}{A data.frame or data.table containing UMI counts per gene per cell.}

\item{dir}{Directory path where output (e.g., isoform count matrix) will be saved.}

\item{gene_bed}{A BED-like data.frame containing gene-level metadata (e.g., strand, position).}

\item{gtf}{GTF annotation file or parsed object with transcript structures. Required.}

\item{gene_col}{Column name in `umi_count` that contains gene IDs. Default is "gene".}

\item{filter_only_intron}{A boolean to indicate if read only cover intron part should be preserved.}

\item{overlap_thresh}{The minimum threshold for the coverage of the annotated isoform.}

\item{gtf_gene_col}{the name of the column which stores gene name in the gtf.}

\item{gtf_start_col}{the name of the column which stores the start position of exon in the gtf.}

\item{gtf_end_col}{the name of the column which stores the end position of exon in the gtf.}

\item{gtf_iso_col}{the name of the column which stores isoform name in the gtf.}

\item{cores}{Integer; number of CPU cores to use for parallel processing. Default is 1.}
}
\value{
Saves the isoform count matrix as a file in `dir`, and returns nothing (invisibly).
If `gtf` is NULL, the function exits early with a warning.
}
\description{
Impute Isoform-Level Counts from UMI Count Matrix
}
\details{
This function aligns a gene-by-cell UMI count matrix to transcript-level (isoform) annotations,
using gene structure from a GTF file. It splits the data for parallel processing and
aggregates isoform counts per gene per cell.
}
